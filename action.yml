name: 'repo2wasm'
description: 'convert a GitHub repository into a Wasm-powered integrated development environment (IDE)'
branding:
  icon: 'terminal'
  color: 'purple'
inputs:
  input:
    description: The name of the input directory to use.
    default: "."
  forgiving:
    description: Ignore package version.
    default: false
  ide:
    description: The IDE to configure.
    default: jupyterlab
  output:
    description: The name of the output directory to use.
    default: gh-pages
  pages:
    description: Enable publishing IDE to GitHub Actions.
    default: true
  python_version:
    description: Version of Python to use.
    default: "3.13"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v5
    - name: Install pixi
      uses: prefix-dev/setup-pixi@v0.9.2
      with:
        pixi-version: v0.59.0
        cache: false
        run-install: false
    - name: Create Pixi environment
      shell: bash
      run: pixi init
    - name: Install Python and micromamba
      shell: bash
      run: pixi add python=${{ inputs.python_version }} micromamba
    - name: Install repo2wasm
      shell: bash
      run: pixi add --pypi repo2wasm
    - name: Add task
      shell: bash
      run: pixi task add repo2wasm repo2wasm
    - name: Create IDE
      shell: bash
      run: |
        if [ "${{ inputs.forgiving }}" = "false" ]
        then
        export REPO2WASM_FORGIVING=""
        else
        export REPO2WASM_FORGIVING="--forgiving"
        fi
        pixi run repo2wasm $REPO2WASM_FORGIVING --ide "${{ inputs.ide }}" --output-dir "${{ inputs.output }}" "${{ inputs.input }}"
    - name: Upload artifact to GitHub
      if: inputs.pages
      uses: actions/upload-pages-artifact@v4
      with:
        path: ${{ inputs.output }}
    - name: Publish GitHub pages
      if: inputs.pages
      uses: actions/deploy-pages@v4